CLOUD ECONOMICS

Fundamentals of Pricing

The fundamental drivers of cost

1. Compute
2. Storage
3. Data Transfer

Principles of pricing
1. Pay for what you consume and for as long as you use it with no large upfront expenses
2. Pay less by using more - realizing volume-based discounts.
There exists tiered pricing for services like (Amazon S3, Amazon EFS)

If existing pricing models do not meet customer needs, custom pricing is
available for high value projects with unique requirements

There exists services with no charges e.g Amazon Auto Scaling, However there might be
charges associated with other AWS services that are used with these services.

1. Pay-as-You-Go (On-Demand Pricing)
How it works:
You pay for compute, storage, or other resources by the hour, second, or request,
with no long-term contracts or upfront commitments.

2. Savings Plans
How it works:
You commit to using a specific amount of compute (measured in $/hour) for 1 or 3 years,
and AWS gives you a discount (up to 72%) compared to On-Demand

3. Free Tier
How it works:
New AWS accounts get 12 months free usage (with limits) for popular services like EC2
(750 hrs/month of t2.micro), S3 (5 GB), and Lambda (1M requests).
Some services offer Always Free tiers (like 1M Lambda requests monthly).

Total Cost of ownership
Is the financial estimate to help identify direct and indirect costs of a system.

is a framework to calculate the full cost of running workloads on AWS compared to traditional on-premises or other cloud environments.

It is used to compare the cost of running an on-premise IT Infrastructure to that of a cloud solution. This assists in making decisions about the optimal deployment
solution and budgeting purposes

TCO Components
For AWS, TCO generally includes three major categories:

Compute Costs

EC2 instances, Lambda, or container services.

Savings Plans/Reserved Instances can reduce costs.

Storage Costs

S3, EBS, Glacier.

Includes data retrieval, transfer, and request costs.

Networking Costs

Data transfer between regions, to the internet, or cross-AZ.

Hard Benefits

1. Reduced spending in compute, storage, network and security
2. Reduction in hardware and software purchases
3. Reduction in operational cost, backup and disaster recovery
4. Reduction in operations personell




AWS ORGANISATIONS

AWS Organizations is a service that helps you centrally manage and govern multiple AWS accounts in your company.

Instead of managing each AWS account separately, Organizations lets you group accounts, apply policies,
and consolidate billing under one umbrella.

Key Features of AWS Organizations
Multi-Account Management

Lets you create and manage multiple AWS accounts.

Accounts can be grouped into Organizational Units (OUs) (e.g., by department or project).

Consolidated Billing

All accounts share a single payment method.

Volume discounts and Reserved Instance/Savings Plans benefits apply across all accounts.

Service Control Policies (SCPs)

Lets you set permission boundaries across accounts.

Example: Restrict certain accounts from using specific services (like EC2) or regions.

Account Creation Automation

You can automatically create new accounts using the API or AWS Management Console.

Helps quickly onboard new teams or projects.

Centralized Governance

Integrated with AWS services like AWS Control Tower and CloudTrail.

Helps enforce compliance and security across accounts.

AWS services can be managed through different interfaces:
1. AWS Management Console - Browser based
2. AWS CLI
3. Software Development Kits (SDK's)
4. HTTPS Query API

AWS SERVICES

AWS Foundational Service
There are 23 different product or service categories, and each category consists of one or more service

Storage Service Category
1.Amazon S3
It is an object storage service that provides scalability, security, data availability and perfomance. It is used to store any amount of data
for websites, mobile data...
It is used best when you need to store unstructured data like media files
It is highly scalable meaning you can virtually store unlimited data

Ideal for: Backup and disaster recovery, Storing photos/videos for apps, Hosting a static website.

2.Amazon Elastic Block Store
Is high perfomance block storage that is designed for use with Amazon EC2 for throughput and transaction intensive workloads

Best when: You need fast, low-latency storage attached to a virtual machine (EC2).

Ideal for: Applications requiring frequent read/write operations, Running databases like MySQL or PostgreSQL.

3.Amazon Elastic File System

4.Amazon Simple Storage Service Glacier
 is a secure, durable, and extremely low-cost Amazon S3 cloud storage class for data archiving and long-term backup

Best when: You need to store data for years at the lowest possible cost but rarely access it.

Ideal for: 
Compliance data (financial, medical, legal).
Old backups and logs.

Compute Service Category
Provide the processing power to run applications, workloads, and code

1. Amazon EC2 (Elastic Compute Cloud)

Convenient when:
You need full control over the OS, networking, and server configuration.
Example use cases: Web servers, game servers, batch processing, enterprise apps.

2.AWS Lambda (Serverless Compute)
Runs your code without provisioning servers. You pay only for the execution time.

3. AWS Elastic Beanstalk
 A Platform as a Service (PaaS) that automatically handles deployment, scaling, and monitoring.

Convenient when:
You want to focus on your code and not the infrastructure.
Example use cases: Rapidly deploying a web app, auto-scaling APIs.

4. Amazon ECS (Elastic Container Service)
Managed container orchestration (supports Docker containers).
Convenient when:
Youâ€™re deploying containerized apps but want AWS to manage the cluster.
Example use cases: Microservices, batch jobs, scalable APIs.

5.Amazon EKS (Elastic Kubernetes Service)
Managed Kubernetes for running containerized applications.
Example use cases: Multi-cloud workloads, large-scale app deployments.

6.Amazon EC2 Auto Scaling
enables you to automatically add or remove EC2 instances according to conditions that you define. 
